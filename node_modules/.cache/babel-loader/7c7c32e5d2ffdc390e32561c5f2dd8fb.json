{"ast":null,"code":"var _jsxFileName = \"/Users/christina/Desktop/me/project-technigo/just-for-fun/people-in-space/src/components/Information.js\";\nimport React, { useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport astronautImg from \"../images/004-astronaut.svg\";\nexport const Information = () => {\n  const allAstronauts = useSelector(store => store.astronauts.all.people);\n  const [checkISS, setCheckISS] = useState(0);\n  let height;\n  let width;\n\n  const checkLocation = () => {\n    allAstronauts.map(astronaut => {\n      if (astronaut.craft === \"ISS\") {\n        setCheckISS(checkISS + 1);\n      }\n    });\n    return checkISS;\n  };\n\n  const getRandomInt = (min, max, val) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    const random = `${Math.floor(Math.random() * (max - min + 1)) + min}${val}`;\n    return random;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, allAstronauts.map((astronaut, index) => /*#__PURE__*/React.createElement(AstronautContainer, {\n    key: astronaut.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, height = getRandomInt(10, 30, \"vh\"), width = getRandomInt(10, 30, \"vw\"), /*#__PURE__*/React.createElement(Img, {\n    positionTop: height,\n    positionLeft: width,\n    src: astronautImg,\n    alt: \"Cartoon astronaut\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(P, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, astronaut.name))));\n};\nconst floating = keyframes`\nfrom {\n  transform: rotate(0deg);\n}\n\nto {\n  transform: rotate(360deg);\n}`;\nconst AstronautContainer = styled.div`\n  width: 100px;\n  position: relative;\n  top: ${props => props.positionTop};\n  left: ${props => props.positionLeft};\n  animation: ${floating} 45s linear infinite;\n`;\nconst Img = styled.img`\n  width: inherit;\n`;\nconst P = styled.p`\n  color: #fff;\n`;\n/*\n${(props) => props.positionTop}\n${(props) => props.positionLeft}\n*/","map":{"version":3,"sources":["/Users/christina/Desktop/me/project-technigo/just-for-fun/people-in-space/src/components/Information.js"],"names":["React","useState","styled","keyframes","useSelector","Information","allAstronauts","store","astronauts","all","people","checkISS","setCheckISS","height","width","checkLocation","map","astronaut","craft","getRandomInt","min","max","val","Math","ceil","floor","random","index","name","astronautImg","floating","AstronautContainer","div","props","positionTop","positionLeft","Img","img","P","p"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAGA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC/B,QAAMC,aAAa,GAAGF,WAAW,CAAEG,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBC,GAAjB,CAAqBC,MAAjC,CAAjC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,CAAD,CAAxC;AACA,MAAIY,MAAJ;AACA,MAAIC,KAAJ;;AAEA,QAAMC,aAAa,GAAG,MAAM;AAC1BT,IAAAA,aAAa,CAACU,GAAd,CAAmBC,SAAD,IAAe;AAC/B,UAAIA,SAAS,CAACC,KAAV,KAAoB,KAAxB,EAA+B;AAC7BN,QAAAA,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAAX;AACD;AACF,KAJD;AAKA,WAAOA,QAAP;AACD,GAPD;;AASA,QAAMQ,YAAY,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAWC,GAAX,KAAmB;AACtCF,IAAAA,GAAG,GAAGG,IAAI,CAACC,IAAL,CAAUJ,GAAV,CAAN;AACAC,IAAAA,GAAG,GAAGE,IAAI,CAACE,KAAL,CAAWJ,GAAX,CAAN;AACA,UAAMK,MAAM,GAAI,GAAEH,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,MAAiBL,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAAI,GAAEE,GAAI,EAA1E;AACA,WAAOI,MAAP;AACD,GALD;;AAOA,sBACE,0CACGpB,aAAa,CAACU,GAAd,CAAkB,CAACC,SAAD,EAAYU,KAAZ,kBACjB,oBAAC,kBAAD;AAAoB,IAAA,GAAG,EAAEV,SAAS,CAACW,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIf,MAAM,GAAGM,YAAY,CAAC,EAAD,EAAK,EAAL,EAAS,IAAT,CADzB,EAEIL,KAAK,GAAGK,YAAY,CAAC,EAAD,EAAK,EAAL,EAAS,IAAT,CAFxB,eAGE,oBAAC,GAAD;AACE,IAAA,WAAW,EAAEN,MADf;AAEE,IAAA,YAAY,EAAEC,KAFhB;AAGE,IAAA,GAAG,EAAEe,YAHP;AAIE,IAAA,GAAG,EAAC,mBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eASE,oBAAC,CAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIZ,SAAS,CAACW,IAAd,CATF,CADD,CADH,CADF;AAiBD,CAvCM;AAyCP,MAAME,QAAQ,GAAG3B,SAAU;;;;;;;EAA3B;AASA,MAAM4B,kBAAkB,GAAG7B,MAAM,CAAC8B,GAAI;;;SAG5BC,KAAD,IAAWA,KAAK,CAACC,WAAY;UAC3BD,KAAD,IAAWA,KAAK,CAACE,YAAa;eACzBL,QAAS;CALxB;AAQA,MAAMM,GAAG,GAAGlC,MAAM,CAACmC,GAAI;;CAAvB;AAGA,MAAMC,CAAC,GAAGpC,MAAM,CAACqC,CAAE;;CAAnB;AAGA","sourcesContent":["import React, { useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport astronautImg from \"../images/004-astronaut.svg\";\n\nexport const Information = () => {\n  const allAstronauts = useSelector((store) => store.astronauts.all.people);\n  const [checkISS, setCheckISS] = useState(0);\n  let height;\n  let width;\n\n  const checkLocation = () => {\n    allAstronauts.map((astronaut) => {\n      if (astronaut.craft === \"ISS\") {\n        setCheckISS(checkISS + 1);\n      }\n    });\n    return checkISS;\n  };\n\n  const getRandomInt = (min, max, val) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    const random = `${Math.floor(Math.random() * (max - min + 1)) + min}${val}`;\n    return random;\n  };\n\n  return (\n    <>\n      {allAstronauts.map((astronaut, index) => (\n        <AstronautContainer key={astronaut.name}>\n          {(height = getRandomInt(10, 30, \"vh\"))}\n          {(width = getRandomInt(10, 30, \"vw\"))}\n          <Img\n            positionTop={height}\n            positionLeft={width}\n            src={astronautImg}\n            alt=\"Cartoon astronaut\"\n          />\n          <P>{astronaut.name}</P>\n        </AstronautContainer>\n      ))}\n    </>\n  );\n};\n\nconst floating = keyframes`\nfrom {\n  transform: rotate(0deg);\n}\n\nto {\n  transform: rotate(360deg);\n}`;\n\nconst AstronautContainer = styled.div`\n  width: 100px;\n  position: relative;\n  top: ${(props) => props.positionTop};\n  left: ${(props) => props.positionLeft};\n  animation: ${floating} 45s linear infinite;\n`;\n\nconst Img = styled.img`\n  width: inherit;\n`;\nconst P = styled.p`\n  color: #fff;\n`;\n/*\n${(props) => props.positionTop}\n${(props) => props.positionLeft}\n*/\n"]},"metadata":{},"sourceType":"module"}